EXPORTED_HEADERS = [
  'Inspector.h',
]

def library(**kwargs):
  if THIS_IS_FBANDROID:
    include_defs('//ReactAndroid/DEFS')
    cxx_library(
      force_static = True,
      deps = JSC_DEPS + [
        '//xplat/folly:molly',
        react_native_xplat_target('jschelpers:jschelpers'),
      ],
      **kwargs
    )
  elif THIS_IS_FBOBJC:
    pass
    # TODO: Currently untested on iOS, but might require linking against a
    # custom version to ensure binary stability?
    # ios_library(
    #   inherited_buck_flags = STATIC_LIBRARY_IOS_FLAGS,
    #   frameworks = [
    #    '$SDKROOT/System/Library/Frameworks/JavaScriptCore.framework',
    #   ],
    #   deps = [
    #     '//xplat/folly:molly',
    #     react_native_xplat_target('jschelpers:jschelpers'),
    #   ],
    #   **kwargs
    # )
  else:
    raise Error('Unknown repo')

library(
  name = 'inspector',
  preprocessor_flags = [
    '-DENABLE_INSPECTOR=1',
  ],
  compiler_flags = [
    '-Wall',
    '-fexceptions',
    '-fvisibility=hidden',
    '-std=gnu++1y',
  ],
  exported_headers = EXPORTED_HEADERS,
  headers = glob(['*.h'], excludes=EXPORTED_HEADERS),
  header_namespace = 'inspector',
  srcs = glob(['*.cpp']),
  visibility = [
    'PUBLIC',
  ],
)
